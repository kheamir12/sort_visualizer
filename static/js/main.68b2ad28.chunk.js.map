{"version":3,"sources":["algorithms/bubbleSort.js","algorithms/shakerSort.js","algorithms/insertionSort.js","algorithms/combSort.js","algorithms/quickSort.js","algorithms/mergeSort.js","Visualizer.jsx","App.js","reportWebVitals.js","index.js"],"names":["bubbleSort","array","size","length","result","i","j","push","shakerSort","left","right","insertionSort","x","combSort","step","parseInt","impl","q","less","partition","quickSort","mergeSort","mergeSortAlg","l","r","m","n1","n2","k","merge","max","is_working","is_animating","is_cancelling","defaultColor","Visualizer","props","state","this","generateArray","document","getElementById","value","randomInt","setState","a","Promise","res","setTimeout","changeToColor","button","className","textContent","width","map","index","style","height","marginLeft","marginRight","id","onClick","start","reset","name","type","min","defaultValue","React","Component","Math","floor","random","arrayCopy","slice","alg","format","startDate","window","performance","now","animate","color","bars","getElementsByClassName","backgroundColor","elem","changed","iteration","speed","time","isNaN","index1","index2","a1","a2","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.68b2ad28.chunk.js","sourcesContent":["export default function bubbleSort(array) {\r\n  let size = array.length;\r\n  let result = [];\r\n\r\n  for (let i = 0; i < size - 1; i++)\r\n    for (let j = 0; j < size - i - 1; j++) {\r\n      result.push(\"h\");\r\n      result.push(j);\r\n      result.push(j + 1);\r\n\r\n      if (array[j] > array[j + 1]) {\r\n        [array[j], array[j + 1]] = [array[j + 1], array[j]];\r\n\r\n        result.push(\"s\");\r\n        result.push(j);\r\n        result.push(j + 1);\r\n      }\r\n    }\r\n  return result;\r\n}\r\n","export default function shakerSort(array) {\r\n  let size = array.length;\r\n  let result = [];\r\n\r\n  let left = 0;\r\n  let right = size - 1;\r\n\r\n  while (left <= right) {\r\n    for (let i = right; i > left; --i) {\r\n      result.push(\"h\");\r\n      result.push(i - 1);\r\n      result.push(i);\r\n\r\n      if (array[i - 1] > array[i]) {\r\n        [array[i - 1], array[i]] = [array[i], array[i - 1]];\r\n\r\n        result.push(\"s\");\r\n        result.push(i - 1);\r\n        result.push(i);\r\n      }\r\n    }\r\n    ++left;\r\n    for (let i = left; i < right; ++i) {\r\n      result.push(\"h\");\r\n      result.push(i);\r\n      result.push(i + 1);\r\n\r\n      if (array[i] > array[i + 1]) {\r\n        [array[i], array[i + 1]] = [array[i + 1], array[i]];\r\n\r\n        result.push(\"s\");\r\n        result.push(i);\r\n        result.push(i + 1);\r\n      }\r\n    }\r\n    --right;\r\n  }\r\n  return result;\r\n}\r\n","export default function insertionSort(array) {\r\n  let size = array.length;\r\n  let result = [];\r\n\r\n  for (let i = 1; i < size; ++i) {\r\n    let x = array[i];\r\n    result.push(\"h\");\r\n    result.push(i);\r\n    let j = i;\r\n\r\n    while (j > 0 && array[j - 1] > x) {\r\n      array[j] = array[j - 1];\r\n\r\n      result.push(\"h\");\r\n      result.push(j - 1);\r\n      result.push(\"c\");\r\n      result.push(array[j - 1]);\r\n      result.push(j);\r\n\r\n      --j;\r\n    }\r\n\r\n    array[j] = x;\r\n    result.push(\"c\");\r\n    result.push(x);\r\n    result.push(j);\r\n  }\r\n  return result;\r\n}\r\n","export default function combSort(array) {\r\n  let size = array.length;\r\n  let result = [];\r\n  let factor = 1.247;\r\n  let step = size - 1;\r\n\r\n  while (step >= 1) {\r\n    for (let i = 0; i + step < size; ++i) {\r\n      result.push(\"h\");\r\n      result.push(i);\r\n      result.push(parseInt(i + step, 10));\r\n\r\n      if (array[i] > array[parseInt(i + step, 10)]) {\r\n        [array[i], array[parseInt(i + step, 10)]] = [\r\n          array[parseInt(i + step, 10)],\r\n          array[i],\r\n        ];\r\n\r\n        result.push(\"s\");\r\n        result.push(i);\r\n        result.push(parseInt(i + step, 10));\r\n      }\r\n    }\r\n    step = step / factor;\r\n  }\r\n\r\n  return result;\r\n}\r\n","let result = [];\r\n\r\nfunction partition(array, left, right) {\r\n  let x = array[right];\r\n  let less = left;\r\n\r\n  for (let i = left; i < right; ++i) {\r\n    result.push(\"h\");\r\n    result.push(right);\r\n    result.push(i);\r\n    if (array[i] <= x) {\r\n      [array[i], array[less]] = [array[less], array[i]];\r\n      result.push(\"s\");\r\n      result.push(i);\r\n      result.push(less);\r\n      ++less;\r\n    }\r\n  }\r\n\r\n  result.push(\"h\");\r\n  result.push(less);\r\n  result.push(right);\r\n  result.push(\"s\");\r\n  result.push(less);\r\n  result.push(right);\r\n  [array[less], array[right]] = [array[right], array[less]];\r\n  return less;\r\n}\r\n\r\nfunction impl(array, left, right) {\r\n  if (left < right) {\r\n    let q = partition(array, left, right);\r\n    impl(array, left, q - 1);\r\n    impl(array, q + 1, right);\r\n  }\r\n}\r\n\r\nexport default function quickSort(array) {\r\n  result = [];\r\n  impl(array, 0, array.length - 1);\r\n  return result;\r\n}\r\n","let result = [];\r\nexport default function mergeSort(array) {\r\n  result = [];\r\n  mergeSortAlg(array, 0, array.length - 1);\r\n  return result;\r\n}\r\n\r\nfunction mergeSortAlg(array, l, r) {\r\n  if (r == null) r = array.length - 1;\r\n  if (l >= r) {\r\n    return [];\r\n  }\r\n\r\n  let m = parseInt(l + (r - l) / 2);\r\n  //alert(l.toString() + \" \" + m.toString() + \" \" + r.toString());\r\n\r\n  mergeSortAlg(array, l, m);\r\n  mergeSortAlg(array, m + 1, r);\r\n\r\n  merge(array, l, m, r);\r\n  return [];\r\n}\r\n\r\nfunction merge(array, l, m, r) {\r\n  let n1 = m - l + 1;\r\n  let n2 = r - m;\r\n\r\n  let left = [];\r\n  let right = [];\r\n\r\n  for (let i = 0; i < n1; ++i) left.push(array[l + i]);\r\n  for (let j = 0; j < n2; ++j) right.push(array[m + 1 + j]);\r\n\r\n  let i = 0,\r\n    j = 0,\r\n    k = l;\r\n\r\n  while (i < n1 && j < n2) {\r\n    result.push(\"h\");\r\n    result.push(l + i);\r\n    result.push(m + 1 + j);\r\n    if (left[i] <= right[j]) ++i;\r\n    else ++j;\r\n  }\r\n\r\n  i = 0;\r\n  j = 0;\r\n  k = l;\r\n\r\n  while (i < n1 && j < n2) {\r\n    result.push(\"c\");\r\n    if (left[i] <= right[j]) {\r\n      result.push(left[i]);\r\n      array[k] = left[i];\r\n      ++i;\r\n    } else {\r\n      result.push(right[j]);\r\n      array[k] = right[j];\r\n      ++j;\r\n    }\r\n    result.push(k);\r\n    ++k;\r\n  }\r\n\r\n  while (i < n1) {\r\n    result.push(\"c\");\r\n    result.push(left[i]);\r\n    result.push(k);\r\n    array[k] = left[i];\r\n    ++i;\r\n    ++k;\r\n  }\r\n\r\n  while (j < n2) {\r\n    result.push(\"c\");\r\n    result.push(right[j]);\r\n    result.push(k);\r\n    array[k] = right[j];\r\n    ++j;\r\n    ++k;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./Visualizer.css\";\r\nimport bubbleSort from \"./algorithms/bubbleSort.js\";\r\nimport shakerSort from \"./algorithms/shakerSort.js\";\r\nimport insertionSort from \"./algorithms/insertionSort.js\";\r\nimport combSort from \"./algorithms/combSort.js\";\r\nimport quickSort from \"./algorithms/quickSort.js\";\r\nimport mergeSort from \"./algorithms/mergeSort.js\";\r\n\r\nconst min = 0;\r\nconst max = 1500;\r\nlet is_working = false;\r\nlet is_animating = false;\r\nlet is_cancelling = false;\r\nconst defaultColor = \"skyblue\";\r\n\r\nexport default class Visualizer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      array: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.generateArray();\r\n  }\r\n\r\n  generateArray() {\r\n    let size = document.getElementById(\"size\").value;\r\n    const array = [];\r\n    for (let i = 0; i < size; i++) {\r\n      array.push(randomInt(min, max));\r\n    }\r\n\r\n    this.setState({ array });\r\n  }\r\n\r\n  async reset() {\r\n    is_cancelling = true;\r\n\r\n    while (is_animating) {\r\n      await new Promise((res) => setTimeout(res, 10));\r\n    }\r\n    changeToColor(defaultColor);\r\n    this.generateArray();\r\n\r\n    let button = document.getElementById(\"startButton\");\r\n    button.className = \"start-button\";\r\n    button.textContent = \"Пуск\";\r\n\r\n    is_cancelling = false;\r\n    is_working = false;\r\n  }\r\n\r\n  render() {\r\n    const array = this.state.array;\r\n\r\n    let size = array.length;\r\n    let margins = 2 * size;\r\n    let width = 100 / (size + margins / 4);\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"bar-container-container\">\r\n          <div className=\"bar-container\">\r\n            {array.map((value, index) => (\r\n              <div\r\n                className=\"bar\"\r\n                key={index}\r\n                style={{\r\n                  height: `${((value - min + 1) / (max - min + 1)) * 100}%`,\r\n                  width: `${width}%`,\r\n                  marginLeft: `${width / 4}%`,\r\n                  marginRight: `${width / 4}%`,\r\n                }}\r\n              ></div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"menu\">\r\n          <div className=\"menu-left\">\r\n            <div className=\"buttons\">\r\n              <button\r\n                id=\"startButton\"\r\n                className=\"start-button\"\r\n                onClick={() => start(this.state.array, \"bubbleSort\")}\r\n              >\r\n                Пуск\r\n              </button>\r\n              <button\r\n                id=\"reset\"\r\n                className=\"reset-button\"\r\n                onClick={() => this.reset()}\r\n              >\r\n                Сброс\r\n              </button>\r\n            </div>\r\n\r\n            <select className=\"selector\" id=\"alg\" name=\"alghorithms\">\r\n              <option value=\"bubbleSort\">Пузырьковая сортировка</option>\r\n              <option value=\"insertionSort\">Сортировка вставками</option>\r\n              <option value=\"shakerSort\">Сортировка перемешиванием</option>\r\n              <option value=\"combSort\">Сортировка расчёской</option>\r\n              <option value=\"quickSort\">Быстрая сортировка</option>\r\n              <option value=\"mergeSort\">Сортировка слиянием</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"menu-right\">\r\n            <div className=\"slider-container\">\r\n              <div>Размер массива</div>\r\n              <input\r\n                className=\"slider\"\r\n                type=\"range\"\r\n                min=\"10\"\r\n                max=\"1000\"\r\n                defaultValue=\"50\"\r\n                step=\"1\"\r\n                id=\"size\"\r\n              ></input>\r\n            </div>\r\n\r\n            <div className=\"slider-container\">\r\n              <div>Скорость</div>\r\n              <input\r\n                className=\"slider\"\r\n                type=\"range\"\r\n                min=\"-300\"\r\n                max=\"499\"\r\n                defaultValue=\"300\"\r\n                step=\"1\"\r\n                id=\"speed\"\r\n              ></input>\r\n            </div>\r\n\r\n            <div id=\"timer\" className=\"time\">\r\n              Время:{\" \"}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction randomInt(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n\r\nasync function start(array) {\r\n  let arrayCopy = array.slice(0);\r\n  if (!is_working && !is_cancelling) {\r\n    is_working = true;\r\n\r\n    let button = document.getElementById(\"startButton\");\r\n    button.className = \"stop-button\";\r\n    button.textContent = \"Стоп\";\r\n\r\n    let alg = document.getElementById(\"alg\").value;\r\n    let format = [];\r\n    let startDate = window.performance.now();\r\n    if (alg === \"bubbleSort\") format = bubbleSort(arrayCopy);\r\n    else if (alg === \"shakerSort\") format = shakerSort(arrayCopy);\r\n    else if (alg === \"insertionSort\") format = insertionSort(arrayCopy);\r\n    else if (alg === \"combSort\") format = combSort(arrayCopy);\r\n    else if (alg === \"quickSort\") format = quickSort(arrayCopy);\r\n    else if (alg === \"mergeSort\") format = mergeSort(arrayCopy);\r\n    document.getElementById(\"timer\").textContent = `Время: ${parseInt(\r\n      (window.performance.now() - startDate) * 1000\r\n    )}нс`;\r\n\r\n    animate(format, array);\r\n    /**/\r\n  } else if (is_working && !is_cancelling) {\r\n    is_cancelling = true;\r\n\r\n    while (is_animating) {\r\n      await new Promise((res) => setTimeout(res, 10));\r\n    }\r\n    changeToColor(defaultColor);\r\n\r\n    let button = document.getElementById(\"startButton\");\r\n    button.className = \"start-button\";\r\n    button.textContent = \"Пуск\";\r\n    is_cancelling = false;\r\n    is_working = false;\r\n  }\r\n}\r\n\r\nfunction changeToColor(color) {\r\n  const bars = document.getElementsByClassName(\"bar\");\r\n  if (bars != null) {\r\n    for (let i = 0; i < bars.length; ++i) {\r\n      bars[i].style.backgroundColor = color;\r\n    }\r\n  }\r\n}\r\n\r\nasync function animate(format, array) {\r\n  is_animating = true;\r\n  const bars = document.getElementsByClassName(\"bar\");\r\n\r\n  let i = 0;\r\n  const elem = document.getElementById(\"speed\");\r\n  let changed = [];\r\n\r\n  let iteration = 1;\r\n  while (i < format.length) {\r\n    if (is_cancelling) {\r\n      is_animating = false;\r\n      return;\r\n    }\r\n    let speed = elem.value;\r\n    let time = Math.max(400 - speed, 10);\r\n\r\n    let k;\r\n    if (speed <= 420) k = 1;\r\n    else if (speed > 495) k = (speed - 490) * 3 + 10;\r\n    else if (speed > 490) k = 16;\r\n    else if (speed > 480) k = 8;\r\n    else if (speed > 460) k = 5;\r\n    else if (speed > 440) k = 3;\r\n    else k = 2;\r\n\r\n    for (let j = 0; j < changed.length; j++) {\r\n      changed[j].backgroundColor = defaultColor;\r\n    }\r\n\r\n    changed = [];\r\n\r\n    if (format[i] === \"h\") {\r\n      i++;\r\n      while (!isNaN(format[i])) {\r\n        let a = bars[format[i]].style;\r\n        a.backgroundColor = \"#CB66CB\";\r\n\r\n        changed.push(a);\r\n        i++;\r\n      }\r\n    } else if (format[i] === \"s\") {\r\n      i++;\r\n      let index1 = format[i];\r\n      let index2 = format[i + 1];\r\n      [array[index1], array[index2]] = [array[index2], array[index1]];\r\n\r\n      let a1 = bars[index1].style;\r\n      let a2 = bars[index2].style;\r\n\r\n      a1.backgroundColor = \"mediumseagreen\";\r\n      a2.backgroundColor = \"mediumseagreen\";\r\n      //if (speed < 360) await new Promise((res) => setTimeout(res, time / 2));\r\n\r\n      a1.height = `${((array[index1] - min + 1) / (max - min + 1)) * 100}% `;\r\n      a2.height = `${((array[index2] - min + 1) / (max - min + 1)) * 100}% `;\r\n\r\n      changed.push(a1);\r\n      changed.push(a2);\r\n      i += 2;\r\n    } else if (format[i] === \"c\") {\r\n      i++;\r\n\r\n      let index = format[i + 1];\r\n      let a1 = bars[index].style;\r\n      array[index] = format[i];\r\n\r\n      a1.backgroundColor = \"mediumseagreen\";\r\n      a1.height = `${((array[index] - min + 1) / (max - min + 1)) * 100}% `;\r\n\r\n      changed.push(a1);\r\n      i += 2;\r\n    }\r\n    if (iteration % k === 0) {\r\n      await new Promise((res) => setTimeout(res, time));\r\n    }\r\n    iteration++;\r\n  }\r\n  for (let j = 0; j < changed.length; j++) {\r\n    changed[j].backgroundColor = defaultColor;\r\n  }\r\n\r\n  let button = document.getElementById(\"startButton\");\r\n  button.className = \"start-button\";\r\n  button.textContent = \"Пуск\";\r\n\r\n  is_animating = false;\r\n  is_working = false;\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Visualizer from \"./Visualizer.jsx\";\n\nfunction App() {\n  return (\n    //<div className=\"App\">\n    <Visualizer></Visualizer>\n    //</div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}